{"ast":null,"code":"var _jsxFileName = \"D:\\\\agency_front\\\\src\\\\components\\\\AccessiblePropertiesList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { getClientPropertyAccess } from '../api/accessProperty'; // путь к твоей функции\nimport PropertyCard from './PropertyCard'; // путь к компоненту\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AccessiblePropertiesList = ({\n  clientId\n}) => {\n  _s();\n  const [properties, setProperties] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  useEffect(() => {\n    const fetchProperties = async () => {\n      try {\n        const accessList = await getClientPropertyAccess(clientId);\n        const propertyList = accessList.map(access => access.property); // вытаскиваем из каждой записи поле `property`\n        setProperties(propertyList);\n      } catch (err) {\n        setError('Ошибка при загрузке данных');\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchProperties();\n  }, [clientId]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 25\n  }, this);\n  if (error) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: error\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 23\n  }, this);\n  if (properties.length === 0) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"\\u041D\\u0435\\u0442 \\u0434\\u043E\\u0441\\u0442\\u0443\\u043F\\u043D\\u044B\\u0445 \\u043A\\u0432\\u0430\\u0440\\u0442\\u0438\\u0440.\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 41\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"property-list\",\n    children: properties.map(property => /*#__PURE__*/_jsxDEV(PropertyCard, {\n      property: property\n    }, property.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 17\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n_s(AccessiblePropertiesList, \"GHOAN7h9Mu6I/LUJAEtJBThJSeQ=\");\n_c = AccessiblePropertiesList;\nexport default AccessiblePropertiesList;\nvar _c;\n$RefreshReg$(_c, \"AccessiblePropertiesList\");","map":{"version":3,"names":["React","useEffect","useState","getClientPropertyAccess","PropertyCard","jsxDEV","_jsxDEV","AccessiblePropertiesList","clientId","_s","properties","setProperties","loading","setLoading","error","setError","fetchProperties","accessList","propertyList","map","access","property","err","children","fileName","_jsxFileName","lineNumber","columnNumber","length","className","id","_c","$RefreshReg$"],"sources":["D:/agency_front/src/components/AccessiblePropertiesList.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { getClientPropertyAccess } from '../api/accessProperty'; // путь к твоей функции\r\nimport PropertyCard from './PropertyCard'; // путь к компоненту\r\n\r\nconst AccessiblePropertiesList = ({ clientId }) => {\r\n    const [properties, setProperties] = useState([]);\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const fetchProperties = async () => {\r\n            try {\r\n                const accessList = await getClientPropertyAccess(clientId);\r\n                const propertyList = accessList.map(access => access.property); // вытаскиваем из каждой записи поле `property`\r\n                setProperties(propertyList);\r\n            } catch (err) {\r\n                setError('Ошибка при загрузке данных');\r\n            } finally {\r\n                setLoading(false);\r\n            }\r\n        };\r\n\r\n        fetchProperties();\r\n    }, [clientId]);\r\n\r\n    if (loading) return <div>Загрузка...</div>;\r\n    if (error) return <div>{error}</div>;\r\n    if (properties.length === 0) return <div>Нет доступных квартир.</div>;\r\n\r\n    return (\r\n        <div className=\"property-list\">\r\n            {properties.map(property => (\r\n                <PropertyCard key={property.id} property={property} />\r\n            ))}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default AccessiblePropertiesList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,uBAAuB,QAAQ,uBAAuB,CAAC,CAAC;AACjE,OAAOC,YAAY,MAAM,gBAAgB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3C,MAAMC,wBAAwB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAExCD,SAAS,CAAC,MAAM;IACZ,MAAMe,eAAe,GAAG,MAAAA,CAAA,KAAY;MAChC,IAAI;QACA,MAAMC,UAAU,GAAG,MAAMd,uBAAuB,CAACK,QAAQ,CAAC;QAC1D,MAAMU,YAAY,GAAGD,UAAU,CAACE,GAAG,CAACC,MAAM,IAAIA,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;QAChEV,aAAa,CAACO,YAAY,CAAC;MAC/B,CAAC,CAAC,OAAOI,GAAG,EAAE;QACVP,QAAQ,CAAC,4BAA4B,CAAC;MAC1C,CAAC,SAAS;QACNF,UAAU,CAAC,KAAK,CAAC;MACrB;IACJ,CAAC;IAEDG,eAAe,CAAC,CAAC;EACrB,CAAC,EAAE,CAACR,QAAQ,CAAC,CAAC;EAEd,IAAII,OAAO,EAAE,oBAAON,OAAA;IAAAiB,QAAA,EAAK;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC1C,IAAIb,KAAK,EAAE,oBAAOR,OAAA;IAAAiB,QAAA,EAAMT;EAAK;IAAAU,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM,CAAC;EACpC,IAAIjB,UAAU,CAACkB,MAAM,KAAK,CAAC,EAAE,oBAAOtB,OAAA;IAAAiB,QAAA,EAAK;EAAsB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAErE,oBACIrB,OAAA;IAAKuB,SAAS,EAAC,eAAe;IAAAN,QAAA,EACzBb,UAAU,CAACS,GAAG,CAACE,QAAQ,iBACpBf,OAAA,CAACF,YAAY;MAAmBiB,QAAQ,EAAEA;IAAS,GAAhCA,QAAQ,CAACS,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CACxD;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEd,CAAC;AAAClB,EAAA,CAhCIF,wBAAwB;AAAAwB,EAAA,GAAxBxB,wBAAwB;AAkC9B,eAAeA,wBAAwB;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}