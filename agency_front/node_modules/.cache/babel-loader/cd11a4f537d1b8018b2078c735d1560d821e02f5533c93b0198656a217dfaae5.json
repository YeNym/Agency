{"ast":null,"code":"import api from \"./axiosConfig\";\nexport const grantAccessToProperty = async (managerId, clientId, propertyId) => {\n  const response = await api.post(`/access/grant`, null, {\n    params: {\n      managerId,\n      clientId,\n      propertyId\n    }\n  });\n  return response.data;\n};\nexport const getClientPropertyAccess = async clientId => {\n  console.log(\"Загружаю доступные квартиры для клиента:\", clientId);\n  const response = await api.get(`/access/client-properties`, {\n    params: {\n      clientId\n    }\n  });\n  console.log(\"Ответ от сервера:\", response.data);\n  return response.data;\n};\nexport const createTravelRequest = async (clientId, propertyId) => {\n  if (!clientId || !propertyId) {\n    throw new Error('clientId или propertyId отсутствует');\n  }\n  const response = await api.post('/travel-requests/create', {\n    clientId,\n    propertyId\n  });\n  return response.data;\n};\nexport const getPendingRequests = async (clientId, propertyId) => {};","map":{"version":3,"names":["api","grantAccessToProperty","managerId","clientId","propertyId","response","post","params","data","getClientPropertyAccess","console","log","get","createTravelRequest","Error","getPendingRequests"],"sources":["D:/agency_front/src/api/accessProperty.js"],"sourcesContent":["import api from \"./axiosConfig\";\r\n\r\nexport const grantAccessToProperty = async (managerId, clientId, propertyId) => {\r\n    const response = await api.post(`/access/grant`, null, {\r\n        params: {\r\n            managerId,\r\n            clientId,\r\n            propertyId\r\n        }\r\n    });\r\n    return response.data;\r\n};\r\n\r\nexport const getClientPropertyAccess = async (clientId) => {\r\n    console.log(\"Загружаю доступные квартиры для клиента:\", clientId);\r\n    const response = await api.get(`/access/client-properties`, {\r\n        params: { clientId }\r\n    });\r\n    console.log(\"Ответ от сервера:\", response.data);\r\n    return response.data;\r\n};\r\n\r\n\r\nexport const createTravelRequest = async (clientId, propertyId) => {\r\n    if (!clientId || !propertyId) {\r\n        throw new Error('clientId или propertyId отсутствует');\r\n    }\r\n\r\n    const response = await api.post('/travel-requests/create', {\r\n        clientId,\r\n        propertyId,\r\n    });\r\n\r\n    return response.data;\r\n};\r\n\r\nexport const getPendingRequests = async (clientId, propertyId) => {}"],"mappings":"AAAA,OAAOA,GAAG,MAAM,eAAe;AAE/B,OAAO,MAAMC,qBAAqB,GAAG,MAAAA,CAAOC,SAAS,EAAEC,QAAQ,EAAEC,UAAU,KAAK;EAC5E,MAAMC,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,eAAe,EAAE,IAAI,EAAE;IACnDC,MAAM,EAAE;MACJL,SAAS;MACTC,QAAQ;MACRC;IACJ;EACJ,CAAC,CAAC;EACF,OAAOC,QAAQ,CAACG,IAAI;AACxB,CAAC;AAED,OAAO,MAAMC,uBAAuB,GAAG,MAAON,QAAQ,IAAK;EACvDO,OAAO,CAACC,GAAG,CAAC,0CAA0C,EAAER,QAAQ,CAAC;EACjE,MAAME,QAAQ,GAAG,MAAML,GAAG,CAACY,GAAG,CAAC,2BAA2B,EAAE;IACxDL,MAAM,EAAE;MAAEJ;IAAS;EACvB,CAAC,CAAC;EACFO,OAAO,CAACC,GAAG,CAAC,mBAAmB,EAAEN,QAAQ,CAACG,IAAI,CAAC;EAC/C,OAAOH,QAAQ,CAACG,IAAI;AACxB,CAAC;AAGD,OAAO,MAAMK,mBAAmB,GAAG,MAAAA,CAAOV,QAAQ,EAAEC,UAAU,KAAK;EAC/D,IAAI,CAACD,QAAQ,IAAI,CAACC,UAAU,EAAE;IAC1B,MAAM,IAAIU,KAAK,CAAC,qCAAqC,CAAC;EAC1D;EAEA,MAAMT,QAAQ,GAAG,MAAML,GAAG,CAACM,IAAI,CAAC,yBAAyB,EAAE;IACvDH,QAAQ;IACRC;EACJ,CAAC,CAAC;EAEF,OAAOC,QAAQ,CAACG,IAAI;AACxB,CAAC;AAED,OAAO,MAAMO,kBAAkB,GAAG,MAAAA,CAAOZ,QAAQ,EAAEC,UAAU,KAAK,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}