{"ast":null,"code":"var _jsxFileName = \"D:\\\\agency_front\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport * as authApi from '../api/authApi';\nimport * as userApi from '../api/userApi';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null); // Добавляем состояние для данных пользователя\n  const [loading, setLoading] = useState(true); // Для отслеживания загрузки\n  const navigate = useNavigate();\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const userData = await userApi.getCurrentUser();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Failed to fetch user data', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const login = async (email, password) => {\n    const {\n      token,\n      refreshToken\n    } = await authApi.login(email, password);\n    localStorage.setItem('token', token);\n    localStorage.setItem('refreshToken', refreshToken);\n    const userData = await userApi.getCurrentUser(); // Получаем данные пользователя после входа\n    setUser(userData);\n    setIsAuthenticated(true);\n  };\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const register = async userData => {\n    await authApi.register(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"ngK2eW8VBW2J0nMmhrpI292f8Gk=\", true);\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","authApi","userApi","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","navigate","useNavigate","initAuth","token","localStorage","getItem","userData","getCurrentUser","error","console","logout","login","email","password","refreshToken","setItem","removeItem","register","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/agency_front/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\nimport * as authApi from '../api/authApi';\r\nimport * as userApi from '../api/userApi';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [user, setUser] = useState(null); // Добавляем состояние для данных пользователя\r\n    const [loading, setLoading] = useState(true); // Для отслеживания загрузки\r\n    const navigate = useNavigate();\r\n    \r\n    useEffect(() => {\r\n        const initAuth = async () => {\r\n            const token = localStorage.getItem('token');\r\n            if (token) {\r\n                try {\r\n                    const userData = await userApi.getCurrentUser();\r\n                    setUser(userData);\r\n                    setIsAuthenticated(true);\r\n                } catch (error) {\r\n                    console.error('Failed to fetch user data', error);\r\n                    logout();\r\n                }\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        initAuth();\r\n    }, []);\r\n\r\n    const login = async (email, password) => {\r\n        const { token, refreshToken } = await authApi.login(email, password);\r\n        localStorage.setItem('token', token);\r\n        localStorage.setItem('refreshToken', refreshToken);\r\n        const userData = await userApi.getCurrentUser(); // Получаем данные пользователя после входа\r\n        setUser(userData);\r\n        setIsAuthenticated(true);\r\n    };\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        await authApi.register(userData);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            isAuthenticated,\r\n            user,\r\n            loading,\r\n            login,\r\n            logout,\r\n            register\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":";;;AAAA,SAASA,aAAa,EAAEC,UAAU,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AACtE,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AACzC,OAAO,KAAKC,OAAO,MAAM,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,WAAW,gBAAGR,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMS,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACY,IAAI,EAAEC,OAAO,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EACxC,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAMgB,QAAQ,GAAGC,WAAW,CAAC,CAAC;EAE9BhB,SAAS,CAAC,MAAM;IACZ,MAAMiB,QAAQ,GAAG,MAAAA,CAAA,KAAY;MACzB,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIF,KAAK,EAAE;QACP,IAAI;UACA,MAAMG,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,cAAc,CAAC,CAAC;UAC/CV,OAAO,CAACS,QAAQ,CAAC;UACjBX,kBAAkB,CAAC,IAAI,CAAC;QAC5B,CAAC,CAAC,OAAOa,KAAK,EAAE;UACZC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;UACjDE,MAAM,CAAC,CAAC;QACZ;MACJ;MACAX,UAAU,CAAC,KAAK,CAAC;IACrB,CAAC;IAEDG,QAAQ,CAAC,CAAC;EACd,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMS,KAAK,GAAG,MAAAA,CAAOC,KAAK,EAAEC,QAAQ,KAAK;IACrC,MAAM;MAAEV,KAAK;MAAEW;IAAa,CAAC,GAAG,MAAM5B,OAAO,CAACyB,KAAK,CAACC,KAAK,EAAEC,QAAQ,CAAC;IACpET,YAAY,CAACW,OAAO,CAAC,OAAO,EAAEZ,KAAK,CAAC;IACpCC,YAAY,CAACW,OAAO,CAAC,cAAc,EAAED,YAAY,CAAC;IAClD,MAAMR,QAAQ,GAAG,MAAMnB,OAAO,CAACoB,cAAc,CAAC,CAAC,CAAC,CAAC;IACjDV,OAAO,CAACS,QAAQ,CAAC;IACjBX,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC;EAED,MAAMe,MAAM,GAAGA,CAAA,KAAM;IACjBN,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,cAAc,CAAC;IACvCnB,OAAO,CAAC,IAAI,CAAC;IACbF,kBAAkB,CAAC,KAAK,CAAC;EAC7B,CAAC;EAED,MAAMsB,QAAQ,GAAG,MAAOX,QAAQ,IAAK;IACjC,MAAMpB,OAAO,CAAC+B,QAAQ,CAACX,QAAQ,CAAC;EACpC,CAAC;EAED,oBACIjB,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACC,KAAK,EAAE;MACzBzB,eAAe;MACfE,IAAI;MACJE,OAAO;MACPa,KAAK;MACLD,MAAM;MACNO;IACJ,CAAE;IAAAzB,QAAA,EACGA;EAAQ;IAAA4B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACS,CAAC;AAE/B,CAAC;AAAC9B,EAAA,CAzDWF,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AA2DzB,OAAO,MAAMkC,OAAO,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACzB,MAAMC,OAAO,GAAG5C,UAAU,CAACO,WAAW,CAAC;EACvC,IAAI,CAACqC,OAAO,EAAE;IACV,MAAM,IAAIC,KAAK,CAAC,6CAA6C,CAAC;EAClE;EACA,OAAOD,OAAO;AAClB,CAAC;AAACD,GAAA,CANWD,OAAO;AAAA,IAAAD,EAAA;AAAAK,YAAA,CAAAL,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}