{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import { getClientsByManager } from '../api/ClientService'; // путь адаптируйте под свой проект\n//\n// const ClientList = ({ managerId }) => {\n//     const [clients, setClients] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//\n//     useEffect(() => {\n//         const fetchClients = async () => {\n//             try {\n//                 const data = await getClientsByManager(managerId);\n//                 setClients(data);\n//             } catch (err) {\n//                 setError('Ошибка при загрузке клиентов');\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n//\n//         if (managerId) {\n//             fetchClients();\n//         }\n//     }, [managerId]);\n//\n//     if (loading) return <p>Загрузка...</p>;\n//     if (error) return <p>{error}</p>;\n//\n//     return (\n//         <div>\n//             <h2>Список клиентов</h2>\n//             {clients.length === 0 ? (\n//                 <p>Клиенты не найдены.</p>\n//             ) : (\n//                 <ul>\n//                     {clients.map(client => (\n//                         <li key={client.id}>\n//                             <strong>Телефон:</strong> {client.phone} <br />\n//                             <strong>Паспорт:</strong> {client.passport} <br />\n//                             <strong>Уровень доступа:</strong> {client.accessLevel}\n//                         </li>\n//                     ))}\n//                 </ul>\n//             )}\n//         </div>\n//     );\n// };\n//\n// export default ClientList;","map":{"version":3,"names":[],"sources":["D:/agency_front/src/components/ClientList.jsx"],"sourcesContent":["// import React, { useEffect, useState } from 'react';\r\n// import { getClientsByManager } from '../api/ClientService'; // путь адаптируйте под свой проект\r\n//\r\n// const ClientList = ({ managerId }) => {\r\n//     const [clients, setClients] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//\r\n//     useEffect(() => {\r\n//         const fetchClients = async () => {\r\n//             try {\r\n//                 const data = await getClientsByManager(managerId);\r\n//                 setClients(data);\r\n//             } catch (err) {\r\n//                 setError('Ошибка при загрузке клиентов');\r\n//             } finally {\r\n//                 setLoading(false);\r\n//             }\r\n//         };\r\n//\r\n//         if (managerId) {\r\n//             fetchClients();\r\n//         }\r\n//     }, [managerId]);\r\n//\r\n//     if (loading) return <p>Загрузка...</p>;\r\n//     if (error) return <p>{error}</p>;\r\n//\r\n//     return (\r\n//         <div>\r\n//             <h2>Список клиентов</h2>\r\n//             {clients.length === 0 ? (\r\n//                 <p>Клиенты не найдены.</p>\r\n//             ) : (\r\n//                 <ul>\r\n//                     {clients.map(client => (\r\n//                         <li key={client.id}>\r\n//                             <strong>Телефон:</strong> {client.phone} <br />\r\n//                             <strong>Паспорт:</strong> {client.passport} <br />\r\n//                             <strong>Уровень доступа:</strong> {client.accessLevel}\r\n//                         </li>\r\n//                     ))}\r\n//                 </ul>\r\n//             )}\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default ClientList;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}