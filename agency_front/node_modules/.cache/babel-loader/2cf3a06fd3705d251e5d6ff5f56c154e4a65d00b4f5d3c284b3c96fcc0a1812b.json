{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\Agency\\\\agency_front\\\\src\\\\components\\\\ManagerApplications.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { getRequestsByManager, updateStatus } from \"../api/accessProperty\";\nimport { getPropertyEnums, getStatusReques } from \"../api/propertyService\";\nimport PropertyCard from \"../components/PropertyCard\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ManagerApplications = ({\n  managerId\n}) => {\n  _s();\n  const [requests, setRequests] = useState([]);\n  const [statusList, setStatusList] = useState([]);\n  const [statusUpdates, setStatusUpdates] = useState({});\n  const [requestStatuses, setRequestStatuses] = useState({});\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const [requestData, enums] = await Promise.all([getRequestsByManager(managerId), getPropertyEnums()]);\n        setRequests(requestData);\n        console.log(requestData);\n        setStatusList(enums.requestStatuses || []);\n        // Получить статусы всех заявок\n        const statusResults = {};\n        for (const req of requestData) {\n          try {\n            const status = await getStatusReques(req.requestId);\n            statusResults[req.requestId] = status;\n          } catch (e) {\n            console.error(`Ошибка при получении статуса заявки ${req.requestId}:`, e);\n            statusResults[req.requestId] = \"Ошибка загрузки\";\n          }\n        }\n        setRequestStatuses(statusResults);\n      } catch (error) {\n        console.error(\"Ошибка при загрузке заявок или статусов:\", error);\n      }\n    };\n    fetchData();\n  }, [managerId]);\n  const handleStatusChange = (requestId, newStatus) => {\n    setStatusUpdates(prev => ({\n      ...prev,\n      [requestId]: newStatus\n    }));\n  };\n  const handleStatusUpdate = async requestId => {\n    const newStatus = statusUpdates[requestId];\n    if (!newStatus) return;\n    try {\n      setRequestStatuses(prev => ({\n        ...prev,\n        [requestId]: \"Обновление...\"\n      }));\n      await updateStatus(requestId, newStatus, managerId);\n      alert(`Статус обновлён на ${newStatus}`);\n    } catch (error) {\n      console.error(\"Ошибка при обновлении статуса:\", error);\n      alert(\"Не удалось обновить статус\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"applications-list\",\n      children: requests.map(request => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"application-item\",\n        children: [/*#__PURE__*/_jsxDEV(PropertyCard, {\n          property: request.property\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"client-info\",\n          children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n            children: \"\\u0418\\u043D\\u0444\\u043E\\u0440\\u043C\\u0430\\u0446\\u0438\\u044F \\u043E \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0418\\u043C\\u044F:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 32\n            }, this), \" \", request.client.authUser.firstname, \" \", request.client.authUser.lastname]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0422\\u0435\\u043B\\u0435\\u0444\\u043E\\u043D:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 32\n            }, this), \" \", request.client.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n              children: \"\\u0422\\u0435\\u043A\\u0443\\u0449\\u0438\\u0439 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 32\n            }, this), \" \", requestStatuses[request.requestId] || \"Загрузка...\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"status-update\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"\\u041D\\u043E\\u0432\\u044B\\u0439 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: statusUpdates[request.requestId] || \"\",\n              onChange: e => handleStatusChange(request.requestId, e.target.value),\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- \\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441 --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 37\n              }, this), statusList.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: status,\n                children: status\n              }, status, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 41\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleStatusUpdate(request.requestId),\n              children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this)]\n      }, request.requestId, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n};\n_s(ManagerApplications, \"SojOYFyNoe9mYpITV+kW1Tdyt8k=\");\n_c = ManagerApplications;\nexport default ManagerApplications;\nvar _c;\n$RefreshReg$(_c, \"ManagerApplications\");","map":{"version":3,"names":["React","useEffect","useState","getRequestsByManager","updateStatus","getPropertyEnums","getStatusReques","PropertyCard","jsxDEV","_jsxDEV","ManagerApplications","managerId","_s","requests","setRequests","statusList","setStatusList","statusUpdates","setStatusUpdates","requestStatuses","setRequestStatuses","fetchData","requestData","enums","Promise","all","console","log","statusResults","req","status","requestId","e","error","handleStatusChange","newStatus","prev","handleStatusUpdate","alert","children","className","map","request","property","fileName","_jsxFileName","lineNumber","columnNumber","client","authUser","firstname","lastname","phone","value","onChange","target","onClick","_c","$RefreshReg$"],"sources":["D:/study/Agency/agency_front/src/components/ManagerApplications.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { getRequestsByManager, updateStatus } from \"../api/accessProperty\";\r\nimport { getPropertyEnums, getStatusReques } from \"../api/propertyService\";\r\nimport PropertyCard from \"../components/PropertyCard\";\r\n\r\nconst ManagerApplications = ({ managerId }) => {\r\n    const [requests, setRequests] = useState([]);\r\n    const [statusList, setStatusList] = useState([]);\r\n    const [statusUpdates, setStatusUpdates] = useState({});\r\n    const [requestStatuses, setRequestStatuses] = useState({});\r\n\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            try {\r\n                const [requestData, enums] = await Promise.all([\r\n                    getRequestsByManager(managerId),\r\n                    getPropertyEnums()\r\n                ]);\r\n                setRequests(requestData);\r\n                console.log(requestData);\r\n                setStatusList(enums.requestStatuses || []);\r\n                // Получить статусы всех заявок\r\n                const statusResults = {};\r\n                for (const req of requestData) {\r\n                    try {\r\n                        const status = await getStatusReques(req.requestId);\r\n                        statusResults[req.requestId] = status;\r\n                    } catch (e) {\r\n                        console.error(`Ошибка при получении статуса заявки ${req.requestId}:`, e);\r\n                        statusResults[req.requestId] = \"Ошибка загрузки\";                    }\r\n                }\r\n                setRequestStatuses(statusResults);\r\n            } catch (error) {\r\n                console.error(\"Ошибка при загрузке заявок или статусов:\", error);\r\n            }\r\n        };\r\n\r\n        fetchData();\r\n\r\n    }, [managerId]);\r\n\r\n    const handleStatusChange = (requestId, newStatus) => {\r\n        setStatusUpdates((prev) => ({ ...prev, [requestId]: newStatus }));\r\n    };\r\n\r\n    const handleStatusUpdate = async (requestId) => {\r\n        const newStatus = statusUpdates[requestId];\r\n        if (!newStatus) return;\r\n\r\n        try {\r\n            setRequestStatuses(prev => ({\r\n                ...prev,\r\n                [requestId]: \"Обновление...\"\r\n            }));\r\n            \r\n            await updateStatus(requestId, newStatus, managerId);\r\n            alert(`Статус обновлён на ${newStatus}`);\r\n        } catch (error) {\r\n            console.error(\"Ошибка при обновлении статуса:\", error);\r\n            alert(\"Не удалось обновить статус\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"applications-list\">\r\n                {requests.map((request) => (\r\n                    <div key={request.requestId} className=\"application-item\">\r\n                        <PropertyCard property={request.property} />\r\n\r\n                        <div className=\"client-info\">\r\n                            <h4>Информация о клиенте</h4>\r\n                            <p><strong>Имя:</strong> {request.client.authUser.firstname} {request.client.authUser.lastname}</p>\r\n                            <p><strong>Телефон:</strong> {request.client.phone}</p>\r\n                            <p><strong>Текущий статус:</strong> {requestStatuses[request.requestId] || \"Загрузка...\"}</p>\r\n                            <div className=\"status-update\">\r\n                                <label>Новый статус:</label>\r\n                                <select\r\n                                    value={statusUpdates[request.requestId] || \"\"}\r\n                                    onChange={(e) =>\r\n                                        handleStatusChange(request.requestId, e.target.value)\r\n                                    }\r\n                                >\r\n                                    <option value=\"\">-- Выберите статус --</option>\r\n                                    {statusList.map((status) => (\r\n                                        <option key={status} value={status}>\r\n                                            {status}\r\n                                        </option>\r\n                                    ))}\r\n                                </select>\r\n                                <button onClick={() => handleStatusUpdate(request.requestId)}>\r\n                                    Изменить статус\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ManagerApplications;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}