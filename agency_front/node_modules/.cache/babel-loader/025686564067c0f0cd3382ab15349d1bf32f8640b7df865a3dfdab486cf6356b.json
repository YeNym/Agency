{"ast":null,"code":"// // components/TravelPropertiesList.jsx\n// import React, { useEffect, useState } from 'react';\n// import { getTravelProperties } from '../api/propertyService';\n// import PropertyCard from './PropertyCard';\n// import '../styles/PropertyList.css';\n//\n// const TravelersPage = () => {\n//     const [properties, setProperties] = useState([]);\n//     const [loading, setLoading] = useState(true);\n//     const [error, setError] = useState(null);\n//\n//     useEffect(() => {\n//         const fetchTravelProperties = async () => {\n//             try {\n//                 const data = await getTravelProperties();\n//                 setProperties(data);\n//             } catch (err) {\n//                 console.error('Error fetching travel properties:', err);\n//                 setError('Failed to load travel properties');\n//             } finally {\n//                 setLoading(false);\n//             }\n//         };\n//\n//         fetchTravelProperties();\n//     }, []);\n//\n//     if (loading) return <div className=\"loading\">Loading travel properties...</div>;\n//     if (error) return <div className=\"error\">{error}</div>;\n//\n//     return (\n//         <div className=\"travel-properties-container\">\n//             <h2>Travel Properties</h2>\n//             <div className=\"properties-grid\">\n//                 {properties.length > 0 ? (\n//                     properties.map(property => (\n//                         <PropertyCard\n//                             key={property.id}\n//                             property={property}\n//                         />\n//                     ))\n//                 ) : (\n//                     <p>No travel properties available</p>\n//                 )}\n//             </div>\n//         </div>\n//     );\n// };\n//\n// export default TravelersPage;","map":{"version":3,"names":[],"sources":["D:/agency_front/src/pages/TravelersPage.jsx"],"sourcesContent":["// // components/TravelPropertiesList.jsx\r\n// import React, { useEffect, useState } from 'react';\r\n// import { getTravelProperties } from '../api/propertyService';\r\n// import PropertyCard from './PropertyCard';\r\n// import '../styles/PropertyList.css';\r\n//\r\n// const TravelersPage = () => {\r\n//     const [properties, setProperties] = useState([]);\r\n//     const [loading, setLoading] = useState(true);\r\n//     const [error, setError] = useState(null);\r\n//\r\n//     useEffect(() => {\r\n//         const fetchTravelProperties = async () => {\r\n//             try {\r\n//                 const data = await getTravelProperties();\r\n//                 setProperties(data);\r\n//             } catch (err) {\r\n//                 console.error('Error fetching travel properties:', err);\r\n//                 setError('Failed to load travel properties');\r\n//             } finally {\r\n//                 setLoading(false);\r\n//             }\r\n//         };\r\n//\r\n//         fetchTravelProperties();\r\n//     }, []);\r\n//\r\n//     if (loading) return <div className=\"loading\">Loading travel properties...</div>;\r\n//     if (error) return <div className=\"error\">{error}</div>;\r\n//\r\n//     return (\r\n//         <div className=\"travel-properties-container\">\r\n//             <h2>Travel Properties</h2>\r\n//             <div className=\"properties-grid\">\r\n//                 {properties.length > 0 ? (\r\n//                     properties.map(property => (\r\n//                         <PropertyCard\r\n//                             key={property.id}\r\n//                             property={property}\r\n//                         />\r\n//                     ))\r\n//                 ) : (\r\n//                     <p>No travel properties available</p>\r\n//                 )}\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n//\r\n// export default TravelersPage;"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}