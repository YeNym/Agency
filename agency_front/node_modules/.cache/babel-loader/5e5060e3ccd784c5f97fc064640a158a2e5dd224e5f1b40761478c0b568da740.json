{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\Agency\\\\agency_front\\\\src\\\\components\\\\CreatePropertyForm.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { createProperty, getPropertyEnums } from '../api/propertyService';\nimport { getClientsByManager } from '../api/ClientService';\nimport '../styles/CreatePropertyForm.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CreatePropertyForm = ({\n  onSuccess\n}) => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedClientId, setSelectedClientId] = useState('');\n  const [clients, setClients] = useState([]);\n  const [images, setImages] = useState([]);\n  const handleImageChange = e => {\n    setImages(Array.from(e.target.files)); // Преобразуем FileList в массив\n  };\n  const [formData, setFormData] = useState({\n    address: {\n      city: '',\n      district: '',\n      street: '',\n      building: ''\n    },\n    rooms: '',\n    price: '',\n    floor: '',\n    propertyLevel: '',\n    description: '',\n    owner: '',\n    propertyType: '',\n    status: 'AVAILABLE',\n    hasBalcony: false,\n    allowPets: false\n  });\n  const [enumValues, setEnumValues] = useState({\n    propertyTypes: [],\n    propertyLevels: [],\n    statuses: []\n  });\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  useEffect(() => {\n    const fetchEnums = async () => {\n      try {\n        const data = await getPropertyEnums();\n        setEnumValues({\n          propertyTypes: data.propertyTypes || [],\n          propertyLevels: data.propertyLevels || [],\n          statuses: data.statuses || []\n        });\n      } catch (err) {\n        console.error('Ошибка загрузки enum значений:', err);\n      }\n    };\n    const fetchClients = async () => {\n      try {\n        const managerId = localStorage.getItem('managerId');\n        if (!managerId) {\n          console.error('Manager ID not found!');\n          return;\n        }\n        const data = await getClientsByManager(managerId);\n        setClients(data || []);\n      } catch (err) {\n        console.error('Ошибка загрузки клиентов:', err);\n      }\n    };\n    fetchEnums();\n    fetchClients();\n  }, []);\n  const handleClientChange = e => {\n    const clientId = e.target.value;\n    setSelectedClientId(clientId);\n    setFormData(prev => ({\n      ...prev,\n      owner: clientId\n    }));\n  };\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    if (name.startsWith('address.')) {\n      const addressField = name.split('.')[1];\n      setFormData(prev => ({\n        ...prev,\n        address: {\n          ...prev.address,\n          [addressField]: value\n        }\n      }));\n    } else if (type === 'checkbox') {\n      setFormData(prev => ({\n        ...prev,\n        [name]: checked\n      }));\n    } else {\n      setFormData(prev => ({\n        ...prev,\n        [name]: value\n      }));\n    }\n  };\n\n  // const handleSubmit = async (e) => {\n  //     e.preventDefault();\n  //     setLoading(true);\n  //     setError('');\n  //\n  //     try {\n  //         const payload = {\n  //             ...formData,\n  //             rooms: parseInt(formData.rooms),\n  //             price: parseFloat(formData.price),\n  //             floor: parseInt(formData.floor),\n  //             owner: {\n  //                 id: parseInt(formData.owner)\n  //             }\n  //         };\n  //\n  //         await createProperty(payload);\n  //\n  //         // Сброс формы после успешного создания\n  //         setFormData({\n  //             address: {\n  //                 city: '',\n  //                 district: '',\n  //                 street: '',\n  //                 building: ''\n  //             },\n  //             rooms: '',\n  //             price: '',\n  //             floor: '',\n  //             propertyLevel: '',\n  //             description: '',\n  //             owner: '',\n  //             propertyType: '',\n  //             status: 'AVAILABLE',\n  //             hasBalcony: false,\n  //             allowPets: false\n  //         });\n  //\n  //         // Сброс выбранного клиента\n  //         setSelectedClientId('');\n  //\n  //         if (onSuccess) {\n  //             await onSuccess();\n  //         }\n  //\n  //         // navigate('/properties');\n  //     } catch (err) {\n  //         setError(err.response?.data?.message || 'Ошибка при создании недвижимости');\n  //     } finally {\n  //         setLoading(false);\n  //     }\n  // };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    setLoading(true);\n    setError('');\n    try {\n      const formDataToSend = new FormData();\n\n      // Добавим JSON-часть как строку\n      const payload = {\n        ...formData,\n        rooms: parseInt(formData.rooms),\n        price: parseFloat(formData.price),\n        floor: parseInt(formData.floor),\n        owner: {\n          id: parseInt(formData.owner)\n        }\n      };\n      formDataToSend.append(\"property\", new Blob([JSON.stringify(payload)], {\n        type: \"application/json\"\n      }));\n\n      // Добавим изображения\n      images.forEach(file => {\n        formDataToSend.append(\"images\", file);\n      });\n      await createProperty(formDataToSend);\n\n      // Очистка формы\n      setFormData({\n        ...formData\n      }); // как у тебя\n      setSelectedClientId('');\n      setImages([]);\n      if (onSuccess) await onSuccess();\n    } catch (err) {\n      var _err$response, _err$response$data;\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : _err$response$data.message) || 'Ошибка при создании недвижимости');\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"create-property-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u043D\\u043E\\u0432\\u0443\\u044E \\u043D\\u0435\\u0434\\u0432\\u0438\\u0436\\u0438\\u043C\\u043E\\u0441\\u0442\\u044C\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 13\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      className: \"property-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"form-columns\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u041E\\u0431\\u0449\\u0438\\u0435 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0435\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0422\\u0438\\u043F \\u043D\\u0435\\u0434\\u0432\\u0438\\u0436\\u0438\\u043C\\u043E\\u0441\\u0442\\u0438:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"propertyType\",\n              value: formData.propertyType,\n              onChange: handleChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0442\\u0438\\u043F\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 33\n              }, this), enumValues.propertyTypes.map(type => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: type,\n                children: type\n              }, type, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: \"\\u041A\\u043B\\u0438\\u0435\\u043D\\u0442:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              value: selectedClientId,\n              onChange: handleClientChange,\n              required: true,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"-- \\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u043A\\u043B\\u0438\\u0435\\u043D\\u0442\\u0430 --\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 33\n              }, this), clients.map(client => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: client.id,\n                children: client.authUser ? `${client.authUser.lastname} ${client.authUser.firstname}` : `Клиент #${client.id}`\n              }, client.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043A\\u043E\\u043C\\u043D\\u0430\\u0442:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"rooms\",\n              value: formData.rooms,\n              onChange: handleChange,\n              min: \"1\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0426\\u0435\\u043D\\u0430:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"price\",\n              value: formData.price,\n              onChange: handleChange,\n              min: \"0\",\n              step: \"100\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u042D\\u0442\\u0430\\u0436:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              name: \"floor\",\n              value: formData.floor,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0423\\u0440\\u043E\\u0432\\u0435\\u043D\\u044C:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"propertyLevel\",\n              value: formData.propertyLevel,\n              onChange: handleChange,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0443\\u0440\\u043E\\u0432\\u0435\\u043D\\u044C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 33\n              }, this), enumValues.propertyLevels.map(level => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: level,\n                children: level\n              }, level, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 37\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 251,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441:\", /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"status\",\n              value: formData.status,\n              onChange: handleChange,\n              required: true,\n              children: enumValues.statuses.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: status,\n                children: status\n              }, status, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 37\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435:\", /*#__PURE__*/_jsxDEV(\"textarea\", {\n              name: \"description\",\n              value: formData.description,\n              onChange: handleChange,\n              rows: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 270,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-column\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"\\u0410\\u0434\\u0440\\u0435\\u0441\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0413\\u043E\\u0440\\u043E\\u0434:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address.city\",\n              value: formData.address.city,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0420\\u0430\\u0439\\u043E\\u043D:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address.district\",\n              value: formData.address.district,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 282,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u0423\\u043B\\u0438\\u0446\\u0430:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address.street\",\n              value: formData.address.street,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            children: [\"\\u041D\\u043E\\u043C\\u0435\\u0440 \\u0434\\u043E\\u043C\\u0430:\", /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              name: \"address.building\",\n              value: formData.address.building,\n              onChange: handleChange,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 294,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"hasBalcony\",\n              checked: formData.hasBalcony,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 297,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"custom-checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 33\n            }, this), \"\\u041D\\u0430\\u043B\\u0438\\u0447\\u0438\\u0435 \\u0431\\u0430\\u043B\\u043A\\u043E\\u043D\\u0430\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 296,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"checkbox-label\",\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: \"allowPets\",\n              checked: formData.allowPets,\n              onChange: handleChange\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"custom-checkbox\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 314,\n              columnNumber: 33\n            }, this), \"\\u0420\\u0430\\u0437\\u0440\\u0435\\u0448\\u0435\\u043D\\u044B \\u0436\\u0438\\u0432\\u043E\\u0442\\u043D\\u044B\\u0435\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 307,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"\\u0418\\u0437\\u043E\\u0431\\u0440\\u0430\\u0436\\u0435\\u043D\\u0438\\u044F:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"file\",\n            accept: \"image/*\",\n            multiple: true,\n            onChange: handleImageChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 321,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 319,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"submit-container\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          disabled: loading,\n          children: loading ? 'Создание...' : 'Создать недвижимость'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 332,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 203,\n    columnNumber: 9\n  }, this);\n};\n_s(CreatePropertyForm, \"Y1wm+igs38QP02fTycVB/hERjew=\", false, function () {\n  return [useNavigate];\n});\n_c = CreatePropertyForm;\nexport default CreatePropertyForm;\nvar _c;\n$RefreshReg$(_c, \"CreatePropertyForm\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","createProperty","getPropertyEnums","getClientsByManager","jsxDEV","_jsxDEV","CreatePropertyForm","onSuccess","_s","navigate","selectedClientId","setSelectedClientId","clients","setClients","images","setImages","handleImageChange","e","Array","from","target","files","formData","setFormData","address","city","district","street","building","rooms","price","floor","propertyLevel","description","owner","propertyType","status","hasBalcony","allowPets","enumValues","setEnumValues","propertyTypes","propertyLevels","statuses","loading","setLoading","error","setError","fetchEnums","data","err","console","fetchClients","managerId","localStorage","getItem","handleClientChange","clientId","value","prev","handleChange","name","type","checked","startsWith","addressField","split","handleSubmit","preventDefault","formDataToSend","FormData","payload","parseInt","parseFloat","id","append","Blob","JSON","stringify","forEach","file","_err$response","_err$response$data","response","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","map","client","authUser","lastname","firstname","min","step","level","rows","accept","multiple","disabled","_c","$RefreshReg$"],"sources":["D:/study/Agency/agency_front/src/components/CreatePropertyForm.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { createProperty, getPropertyEnums } from '../api/propertyService';\r\nimport { getClientsByManager } from '../api/ClientService';\r\nimport '../styles/CreatePropertyForm.css';\r\n\r\nconst CreatePropertyForm = ({ onSuccess }) => {\r\n    const navigate = useNavigate();\r\n    const [selectedClientId, setSelectedClientId] = useState('');\r\n    const [clients, setClients] = useState([]);\r\n    const [images, setImages] = useState([]);\r\n\r\n    const handleImageChange = (e) => {\r\n        setImages(Array.from(e.target.files)); // Преобразуем FileList в массив\r\n    };\r\n\r\n    const [formData, setFormData] = useState({\r\n        address: {\r\n            city: '',\r\n            district: '',\r\n            street: '',\r\n            building: ''\r\n        },\r\n        rooms: '',\r\n        price: '',\r\n        floor: '',\r\n        propertyLevel: '',\r\n        description: '',\r\n        owner: '',\r\n        propertyType: '',\r\n        status: 'AVAILABLE',\r\n        hasBalcony: false,\r\n        allowPets: false\r\n    });\r\n\r\n    const [enumValues, setEnumValues] = useState({\r\n        propertyTypes: [],\r\n        propertyLevels: [],\r\n        statuses: []\r\n    });\r\n\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const fetchEnums = async () => {\r\n            try {\r\n                const data = await getPropertyEnums();\r\n                setEnumValues({\r\n                    propertyTypes: data.propertyTypes || [],\r\n                    propertyLevels: data.propertyLevels || [],\r\n                    statuses: data.statuses || []\r\n                });\r\n            } catch (err) {\r\n                console.error('Ошибка загрузки enum значений:', err);\r\n            }\r\n        };\r\n\r\n        const fetchClients = async () => {\r\n            try {\r\n                const managerId = localStorage.getItem('managerId');\r\n                if (!managerId) {\r\n                    console.error('Manager ID not found!');\r\n                    return;\r\n                }\r\n                const data = await getClientsByManager(managerId);\r\n                setClients(data || []);\r\n            } catch (err) {\r\n                console.error('Ошибка загрузки клиентов:', err);\r\n            }\r\n        };\r\n\r\n        fetchEnums();\r\n        fetchClients();\r\n    }, []);\r\n\r\n    const handleClientChange = (e) => {\r\n        const clientId = e.target.value;\r\n        setSelectedClientId(clientId);\r\n        setFormData(prev => ({\r\n            ...prev,\r\n            owner: clientId\r\n        }));\r\n    };\r\n\r\n    const handleChange = (e) => {\r\n        const { name, value, type, checked } = e.target;\r\n\r\n        if (name.startsWith('address.')) {\r\n            const addressField = name.split('.')[1];\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                address: {\r\n                    ...prev.address,\r\n                    [addressField]: value\r\n                }\r\n            }));\r\n        } else if (type === 'checkbox') {\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                [name]: checked\r\n            }));\r\n        } else {\r\n            setFormData(prev => ({\r\n                ...prev,\r\n                [name]: value\r\n            }));\r\n        }\r\n    };\r\n\r\n    // const handleSubmit = async (e) => {\r\n    //     e.preventDefault();\r\n    //     setLoading(true);\r\n    //     setError('');\r\n    //\r\n    //     try {\r\n    //         const payload = {\r\n    //             ...formData,\r\n    //             rooms: parseInt(formData.rooms),\r\n    //             price: parseFloat(formData.price),\r\n    //             floor: parseInt(formData.floor),\r\n    //             owner: {\r\n    //                 id: parseInt(formData.owner)\r\n    //             }\r\n    //         };\r\n    //\r\n    //         await createProperty(payload);\r\n    //\r\n    //         // Сброс формы после успешного создания\r\n    //         setFormData({\r\n    //             address: {\r\n    //                 city: '',\r\n    //                 district: '',\r\n    //                 street: '',\r\n    //                 building: ''\r\n    //             },\r\n    //             rooms: '',\r\n    //             price: '',\r\n    //             floor: '',\r\n    //             propertyLevel: '',\r\n    //             description: '',\r\n    //             owner: '',\r\n    //             propertyType: '',\r\n    //             status: 'AVAILABLE',\r\n    //             hasBalcony: false,\r\n    //             allowPets: false\r\n    //         });\r\n    //\r\n    //         // Сброс выбранного клиента\r\n    //         setSelectedClientId('');\r\n    //\r\n    //         if (onSuccess) {\r\n    //             await onSuccess();\r\n    //         }\r\n    //\r\n    //         // navigate('/properties');\r\n    //     } catch (err) {\r\n    //         setError(err.response?.data?.message || 'Ошибка при создании недвижимости');\r\n    //     } finally {\r\n    //         setLoading(false);\r\n    //     }\r\n    // };\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        setError('');\r\n\r\n        try {\r\n            const formDataToSend = new FormData();\r\n\r\n            // Добавим JSON-часть как строку\r\n            const payload = {\r\n                ...formData,\r\n                rooms: parseInt(formData.rooms),\r\n                price: parseFloat(formData.price),\r\n                floor: parseInt(formData.floor),\r\n                owner: { id: parseInt(formData.owner) }\r\n            };\r\n\r\n            formDataToSend.append(\"property\", new Blob([JSON.stringify(payload)], { type: \"application/json\" }));\r\n\r\n            // Добавим изображения\r\n            images.forEach((file) => {\r\n                formDataToSend.append(\"images\", file);\r\n            });\r\n\r\n            await createProperty(formDataToSend);\r\n\r\n            // Очистка формы\r\n            setFormData({ ...formData }); // как у тебя\r\n            setSelectedClientId('');\r\n            setImages([]);\r\n\r\n            if (onSuccess) await onSuccess();\r\n        } catch (err) {\r\n            setError(err.response?.data?.message || 'Ошибка при создании недвижимости');\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"create-property-container\">\r\n            <h2>Добавить новую недвижимость</h2>\r\n            {error && <div className=\"error-message\">{error}</div>}\r\n\r\n            <form onSubmit={handleSubmit} className=\"property-form\">\r\n                <div className=\"form-columns\">\r\n                    <div className=\"form-column\">\r\n                        <h3>Общие данные</h3>\r\n\r\n                        <label>\r\n                            Тип недвижимости:\r\n                            <select name=\"propertyType\" value={formData.propertyType} onChange={handleChange} required>\r\n                                <option value=\"\">Выберите тип</option>\r\n                                {enumValues.propertyTypes.map(type => (\r\n                                    <option key={type} value={type}>{type}</option>\r\n                                ))}\r\n                            </select>\r\n                        </label>\r\n\r\n                        <label>\r\n                            <span>Клиент:</span>\r\n                            <select value={selectedClientId} onChange={handleClientChange} required>\r\n                                <option value=\"\">-- Выберите клиента --</option>\r\n                                {clients.map(client => (\r\n                                    <option key={client.id} value={client.id}>\r\n                                        {client.authUser ? `${client.authUser.lastname} ${client.authUser.firstname}` : `Клиент #${client.id}`}\r\n                                    </option>\r\n                                ))}\r\n                            </select>\r\n                        </label>\r\n\r\n                        <label>\r\n                            Количество комнат:\r\n                            <input type=\"number\" name=\"rooms\" value={formData.rooms} onChange={handleChange} min=\"1\" required />\r\n                        </label>\r\n\r\n                        <label>\r\n                            Цена:\r\n                            <input type=\"number\" name=\"price\" value={formData.price} onChange={handleChange} min=\"0\" step=\"100\" required />\r\n                        </label>\r\n\r\n                        <label>\r\n                            Этаж:\r\n                            <input type=\"number\" name=\"floor\" value={formData.floor} onChange={handleChange} required />\r\n                        </label>\r\n\r\n                        <label>\r\n                            Уровень:\r\n                            <select name=\"propertyLevel\" value={formData.propertyLevel} onChange={handleChange}>\r\n                                <option value=\"\">Выберите уровень</option>\r\n                                {enumValues.propertyLevels.map(level => (\r\n                                    <option key={level} value={level}>{level}</option>\r\n                                ))}\r\n                            </select>\r\n                        </label>\r\n\r\n                        <label>\r\n                            Статус:\r\n                            <select name=\"status\" value={formData.status} onChange={handleChange} required>\r\n                                {enumValues.statuses.map(status => (\r\n                                    <option key={status} value={status}>{status}</option>\r\n                                ))}\r\n                            </select>\r\n                        </label>\r\n\r\n                        <label>\r\n                            Описание:\r\n                            <textarea name=\"description\" value={formData.description} onChange={handleChange} rows=\"4\" />\r\n                        </label>\r\n                    </div>\r\n\r\n                    <div className=\"form-column\">\r\n                        <h3>Адрес</h3>\r\n\r\n                        <label>\r\n                            Город:\r\n                            <input type=\"text\" name=\"address.city\" value={formData.address.city} onChange={handleChange} required />\r\n                        </label>\r\n\r\n                        <label>\r\n                            Район:\r\n                            <input type=\"text\" name=\"address.district\" value={formData.address.district} onChange={handleChange} required />\r\n                        </label>\r\n\r\n                        <label>\r\n                            Улица:\r\n                            <input type=\"text\" name=\"address.street\" value={formData.address.street} onChange={handleChange} required />\r\n                        </label>\r\n\r\n                        <label>\r\n                            Номер дома:\r\n                            <input type=\"text\" name=\"address.building\" value={formData.address.building} onChange={handleChange} required />\r\n                        </label>\r\n                            <label className=\"checkbox-label\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"hasBalcony\"\r\n                                    checked={formData.hasBalcony}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <span className=\"custom-checkbox\"></span>\r\n                                Наличие балкона\r\n                            </label>\r\n\r\n                            <label className=\"checkbox-label\">\r\n                                <input\r\n                                    type=\"checkbox\"\r\n                                    name=\"allowPets\"\r\n                                    checked={formData.allowPets}\r\n                                    onChange={handleChange}\r\n                                />\r\n                                <span className=\"custom-checkbox\"></span>\r\n                                Разрешены животные\r\n                            </label>\r\n\r\n                    </div>\r\n                    <label>\r\n                        Изображения:\r\n                        <input\r\n                            type=\"file\"\r\n                            accept=\"image/*\"\r\n                            multiple\r\n                            onChange={handleImageChange}\r\n                        />\r\n                    </label>\r\n\r\n                </div>\r\n\r\n                <div className=\"submit-container\">\r\n                    <button type=\"submit\" disabled={loading}>\r\n                        {loading ? 'Создание...' : 'Создать недвижимость'}\r\n                    </button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreatePropertyForm;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,SAASC,cAAc,EAAEC,gBAAgB,QAAQ,wBAAwB;AACzE,SAASC,mBAAmB,QAAQ,sBAAsB;AAC1D,OAAO,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,kBAAkB,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EAC1C,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC5D,MAAM,CAACc,OAAO,EAAEC,UAAU,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACgB,MAAM,EAAEC,SAAS,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMkB,iBAAiB,GAAIC,CAAC,IAAK;IAC7BF,SAAS,CAACG,KAAK,CAACC,IAAI,CAACF,CAAC,CAACG,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3C,CAAC;EAED,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGzB,QAAQ,CAAC;IACrC0B,OAAO,EAAE;MACLC,IAAI,EAAE,EAAE;MACRC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE;IACd,CAAC;IACDC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,KAAK,EAAE,EAAE;IACTC,aAAa,EAAE,EAAE;IACjBC,WAAW,EAAE,EAAE;IACfC,KAAK,EAAE,EAAE;IACTC,YAAY,EAAE,EAAE;IAChBC,MAAM,EAAE,WAAW;IACnBC,UAAU,EAAE,KAAK;IACjBC,SAAS,EAAE;EACf,CAAC,CAAC;EAEF,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAG1C,QAAQ,CAAC;IACzC2C,aAAa,EAAE,EAAE;IACjBC,cAAc,EAAE,EAAE;IAClBC,QAAQ,EAAE;EACd,CAAC,CAAC;EAEF,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAG/C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACgD,KAAK,EAAEC,QAAQ,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACZ,MAAMiD,UAAU,GAAG,MAAAA,CAAA,KAAY;MAC3B,IAAI;QACA,MAAMC,IAAI,GAAG,MAAM/C,gBAAgB,CAAC,CAAC;QACrCsC,aAAa,CAAC;UACVC,aAAa,EAAEQ,IAAI,CAACR,aAAa,IAAI,EAAE;UACvCC,cAAc,EAAEO,IAAI,CAACP,cAAc,IAAI,EAAE;UACzCC,QAAQ,EAAEM,IAAI,CAACN,QAAQ,IAAI;QAC/B,CAAC,CAAC;MACN,CAAC,CAAC,OAAOO,GAAG,EAAE;QACVC,OAAO,CAACL,KAAK,CAAC,gCAAgC,EAAEI,GAAG,CAAC;MACxD;IACJ,CAAC;IAED,MAAME,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;QACnD,IAAI,CAACF,SAAS,EAAE;UACZF,OAAO,CAACL,KAAK,CAAC,uBAAuB,CAAC;UACtC;QACJ;QACA,MAAMG,IAAI,GAAG,MAAM9C,mBAAmB,CAACkD,SAAS,CAAC;QACjDxC,UAAU,CAACoC,IAAI,IAAI,EAAE,CAAC;MAC1B,CAAC,CAAC,OAAOC,GAAG,EAAE;QACVC,OAAO,CAACL,KAAK,CAAC,2BAA2B,EAAEI,GAAG,CAAC;MACnD;IACJ,CAAC;IAEDF,UAAU,CAAC,CAAC;IACZI,YAAY,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMI,kBAAkB,GAAIvC,CAAC,IAAK;IAC9B,MAAMwC,QAAQ,GAAGxC,CAAC,CAACG,MAAM,CAACsC,KAAK;IAC/B/C,mBAAmB,CAAC8C,QAAQ,CAAC;IAC7BlC,WAAW,CAACoC,IAAI,KAAK;MACjB,GAAGA,IAAI;MACPzB,KAAK,EAAEuB;IACX,CAAC,CAAC,CAAC;EACP,CAAC;EAED,MAAMG,YAAY,GAAI3C,CAAC,IAAK;IACxB,MAAM;MAAE4C,IAAI;MAAEH,KAAK;MAAEI,IAAI;MAAEC;IAAQ,CAAC,GAAG9C,CAAC,CAACG,MAAM;IAE/C,IAAIyC,IAAI,CAACG,UAAU,CAAC,UAAU,CAAC,EAAE;MAC7B,MAAMC,YAAY,GAAGJ,IAAI,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;MACvC3C,WAAW,CAACoC,IAAI,KAAK;QACjB,GAAGA,IAAI;QACPnC,OAAO,EAAE;UACL,GAAGmC,IAAI,CAACnC,OAAO;UACf,CAACyC,YAAY,GAAGP;QACpB;MACJ,CAAC,CAAC,CAAC;IACP,CAAC,MAAM,IAAII,IAAI,KAAK,UAAU,EAAE;MAC5BvC,WAAW,CAACoC,IAAI,KAAK;QACjB,GAAGA,IAAI;QACP,CAACE,IAAI,GAAGE;MACZ,CAAC,CAAC,CAAC;IACP,CAAC,MAAM;MACHxC,WAAW,CAACoC,IAAI,KAAK;QACjB,GAAGA,IAAI;QACP,CAACE,IAAI,GAAGH;MACZ,CAAC,CAAC,CAAC;IACP;EACJ,CAAC;;EAED;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMS,YAAY,GAAG,MAAOlD,CAAC,IAAK;IAC9BA,CAAC,CAACmD,cAAc,CAAC,CAAC;IAClBvB,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,EAAE,CAAC;IAEZ,IAAI;MACA,MAAMsB,cAAc,GAAG,IAAIC,QAAQ,CAAC,CAAC;;MAErC;MACA,MAAMC,OAAO,GAAG;QACZ,GAAGjD,QAAQ;QACXO,KAAK,EAAE2C,QAAQ,CAAClD,QAAQ,CAACO,KAAK,CAAC;QAC/BC,KAAK,EAAE2C,UAAU,CAACnD,QAAQ,CAACQ,KAAK,CAAC;QACjCC,KAAK,EAAEyC,QAAQ,CAAClD,QAAQ,CAACS,KAAK,CAAC;QAC/BG,KAAK,EAAE;UAAEwC,EAAE,EAAEF,QAAQ,CAAClD,QAAQ,CAACY,KAAK;QAAE;MAC1C,CAAC;MAEDmC,cAAc,CAACM,MAAM,CAAC,UAAU,EAAE,IAAIC,IAAI,CAAC,CAACC,IAAI,CAACC,SAAS,CAACP,OAAO,CAAC,CAAC,EAAE;QAAET,IAAI,EAAE;MAAmB,CAAC,CAAC,CAAC;;MAEpG;MACAhD,MAAM,CAACiE,OAAO,CAAEC,IAAI,IAAK;QACrBX,cAAc,CAACM,MAAM,CAAC,QAAQ,EAAEK,IAAI,CAAC;MACzC,CAAC,CAAC;MAEF,MAAM/E,cAAc,CAACoE,cAAc,CAAC;;MAEpC;MACA9C,WAAW,CAAC;QAAE,GAAGD;MAAS,CAAC,CAAC,CAAC,CAAC;MAC9BX,mBAAmB,CAAC,EAAE,CAAC;MACvBI,SAAS,CAAC,EAAE,CAAC;MAEb,IAAIR,SAAS,EAAE,MAAMA,SAAS,CAAC,CAAC;IACpC,CAAC,CAAC,OAAO2C,GAAG,EAAE;MAAA,IAAA+B,aAAA,EAAAC,kBAAA;MACVnC,QAAQ,CAAC,EAAAkC,aAAA,GAAA/B,GAAG,CAACiC,QAAQ,cAAAF,aAAA,wBAAAC,kBAAA,GAAZD,aAAA,CAAchC,IAAI,cAAAiC,kBAAA,uBAAlBA,kBAAA,CAAoBE,OAAO,KAAI,kCAAkC,CAAC;IAC/E,CAAC,SAAS;MACNvC,UAAU,CAAC,KAAK,CAAC;IACrB;EACJ,CAAC;EAED,oBACIxC,OAAA;IAAKgF,SAAS,EAAC,2BAA2B;IAAAC,QAAA,gBACtCjF,OAAA;MAAAiF,QAAA,EAAI;IAA2B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACnC5C,KAAK,iBAAIzC,OAAA;MAAKgF,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAExC;IAAK;MAAAyC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAM,CAAC,eAEtDrF,OAAA;MAAMsF,QAAQ,EAAExB,YAAa;MAACkB,SAAS,EAAC,eAAe;MAAAC,QAAA,gBACnDjF,OAAA;QAAKgF,SAAS,EAAC,cAAc;QAAAC,QAAA,gBACzBjF,OAAA;UAAKgF,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxBjF,OAAA;YAAAiF,QAAA,EAAI;UAAY;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAErBrF,OAAA;YAAAiF,QAAA,GAAO,8FAEH,eAAAjF,OAAA;cAAQwD,IAAI,EAAC,cAAc;cAACH,KAAK,EAAEpC,QAAQ,CAACa,YAAa;cAACyD,QAAQ,EAAEhC,YAAa;cAACiC,QAAQ;cAAAP,QAAA,gBACtFjF,OAAA;gBAAQqD,KAAK,EAAC,EAAE;gBAAA4B,QAAA,EAAC;cAAY;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACrCnD,UAAU,CAACE,aAAa,CAACqD,GAAG,CAAChC,IAAI,iBAC9BzD,OAAA;gBAAmBqD,KAAK,EAAEI,IAAK;gBAAAwB,QAAA,EAAExB;cAAI,GAAxBA,IAAI;gBAAAyB,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA6B,CACjD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAERrF,OAAA;YAAAiF,QAAA,gBACIjF,OAAA;cAAAiF,QAAA,EAAM;YAAO;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAM,CAAC,eACpBrF,OAAA;cAAQqD,KAAK,EAAEhD,gBAAiB;cAACkF,QAAQ,EAAEpC,kBAAmB;cAACqC,QAAQ;cAAAP,QAAA,gBACnEjF,OAAA;gBAAQqD,KAAK,EAAC,EAAE;gBAAA4B,QAAA,EAAC;cAAsB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC/C9E,OAAO,CAACkF,GAAG,CAACC,MAAM,iBACf1F,OAAA;gBAAwBqD,KAAK,EAAEqC,MAAM,CAACrB,EAAG;gBAAAY,QAAA,EACpCS,MAAM,CAACC,QAAQ,GAAG,GAAGD,MAAM,CAACC,QAAQ,CAACC,QAAQ,IAAIF,MAAM,CAACC,QAAQ,CAACE,SAAS,EAAE,GAAG,WAAWH,MAAM,CAACrB,EAAE;cAAE,GAD7FqB,MAAM,CAACrB,EAAE;gBAAAa,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEd,CACX,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAERrF,OAAA;YAAAiF,QAAA,GAAO,oGAEH,eAAAjF,OAAA;cAAOyD,IAAI,EAAC,QAAQ;cAACD,IAAI,EAAC,OAAO;cAACH,KAAK,EAAEpC,QAAQ,CAACO,KAAM;cAAC+D,QAAQ,EAAEhC,YAAa;cAACuC,GAAG,EAAC,GAAG;cAACN,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACjG,CAAC,eAERrF,OAAA;YAAAiF,QAAA,GAAO,2BAEH,eAAAjF,OAAA;cAAOyD,IAAI,EAAC,QAAQ;cAACD,IAAI,EAAC,OAAO;cAACH,KAAK,EAAEpC,QAAQ,CAACQ,KAAM;cAAC8D,QAAQ,EAAEhC,YAAa;cAACuC,GAAG,EAAC,GAAG;cAACC,IAAI,EAAC,KAAK;cAACP,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5G,CAAC,eAERrF,OAAA;YAAAiF,QAAA,GAAO,2BAEH,eAAAjF,OAAA;cAAOyD,IAAI,EAAC,QAAQ;cAACD,IAAI,EAAC,OAAO;cAACH,KAAK,EAAEpC,QAAQ,CAACS,KAAM;cAAC6D,QAAQ,EAAEhC,YAAa;cAACiC,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzF,CAAC,eAERrF,OAAA;YAAAiF,QAAA,GAAO,6CAEH,eAAAjF,OAAA;cAAQwD,IAAI,EAAC,eAAe;cAACH,KAAK,EAAEpC,QAAQ,CAACU,aAAc;cAAC4D,QAAQ,EAAEhC,YAAa;cAAA0B,QAAA,gBAC/EjF,OAAA;gBAAQqD,KAAK,EAAC,EAAE;gBAAA4B,QAAA,EAAC;cAAgB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EACzCnD,UAAU,CAACG,cAAc,CAACoD,GAAG,CAACO,KAAK,iBAChChG,OAAA;gBAAoBqD,KAAK,EAAE2C,KAAM;gBAAAf,QAAA,EAAEe;cAAK,GAA3BA,KAAK;gBAAAd,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAA+B,CACpD,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAERrF,OAAA;YAAAiF,QAAA,GAAO,uCAEH,eAAAjF,OAAA;cAAQwD,IAAI,EAAC,QAAQ;cAACH,KAAK,EAAEpC,QAAQ,CAACc,MAAO;cAACwD,QAAQ,EAAEhC,YAAa;cAACiC,QAAQ;cAAAP,QAAA,EACzE/C,UAAU,CAACI,QAAQ,CAACmD,GAAG,CAAC1D,MAAM,iBAC3B/B,OAAA;gBAAqBqD,KAAK,EAAEtB,MAAO;gBAAAkD,QAAA,EAAElD;cAAM,GAA9BA,MAAM;gBAAAmD,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAiC,CACvD;YAAC;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC,eAERrF,OAAA;YAAAiF,QAAA,GAAO,mDAEH,eAAAjF,OAAA;cAAUwD,IAAI,EAAC,aAAa;cAACH,KAAK,EAAEpC,QAAQ,CAACW,WAAY;cAAC2D,QAAQ,EAAEhC,YAAa;cAAC0C,IAAI,EAAC;YAAG;cAAAf,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1F,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACP,CAAC,eAENrF,OAAA;UAAKgF,SAAS,EAAC,aAAa;UAAAC,QAAA,gBACxBjF,OAAA;YAAAiF,QAAA,EAAI;UAAK;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAEdrF,OAAA;YAAAiF,QAAA,GAAO,iCAEH,eAAAjF,OAAA;cAAOyD,IAAI,EAAC,MAAM;cAACD,IAAI,EAAC,cAAc;cAACH,KAAK,EAAEpC,QAAQ,CAACE,OAAO,CAACC,IAAK;cAACmE,QAAQ,EAAEhC,YAAa;cAACiC,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACrG,CAAC,eAERrF,OAAA;YAAAiF,QAAA,GAAO,iCAEH,eAAAjF,OAAA;cAAOyD,IAAI,EAAC,MAAM;cAACD,IAAI,EAAC,kBAAkB;cAACH,KAAK,EAAEpC,QAAQ,CAACE,OAAO,CAACE,QAAS;cAACkE,QAAQ,EAAEhC,YAAa;cAACiC,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7G,CAAC,eAERrF,OAAA;YAAAiF,QAAA,GAAO,iCAEH,eAAAjF,OAAA;cAAOyD,IAAI,EAAC,MAAM;cAACD,IAAI,EAAC,gBAAgB;cAACH,KAAK,EAAEpC,QAAQ,CAACE,OAAO,CAACG,MAAO;cAACiE,QAAQ,EAAEhC,YAAa;cAACiC,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzG,CAAC,eAERrF,OAAA;YAAAiF,QAAA,GAAO,0DAEH,eAAAjF,OAAA;cAAOyD,IAAI,EAAC,MAAM;cAACD,IAAI,EAAC,kBAAkB;cAACH,KAAK,EAAEpC,QAAQ,CAACE,OAAO,CAACI,QAAS;cAACgE,QAAQ,EAAEhC,YAAa;cAACiC,QAAQ;YAAA;cAAAN,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC7G,CAAC,eACJrF,OAAA;YAAOgF,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BjF,OAAA;cACIyD,IAAI,EAAC,UAAU;cACfD,IAAI,EAAC,YAAY;cACjBE,OAAO,EAAEzC,QAAQ,CAACe,UAAW;cAC7BuD,QAAQ,EAAEhC;YAAa;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,eACFrF,OAAA;cAAMgF,SAAS,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,yFAE7C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC,eAERrF,OAAA;YAAOgF,SAAS,EAAC,gBAAgB;YAAAC,QAAA,gBAC7BjF,OAAA;cACIyD,IAAI,EAAC,UAAU;cACfD,IAAI,EAAC,WAAW;cAChBE,OAAO,EAAEzC,QAAQ,CAACgB,SAAU;cAC5BsD,QAAQ,EAAEhC;YAAa;cAAA2B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1B,CAAC,eACFrF,OAAA;cAAMgF,SAAS,EAAC;YAAiB;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,2GAE7C;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAO,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEX,CAAC,eACNrF,OAAA;UAAAiF,QAAA,GAAO,qEAEH,eAAAjF,OAAA;YACIyD,IAAI,EAAC,MAAM;YACXyC,MAAM,EAAC,SAAS;YAChBC,QAAQ;YACRZ,QAAQ,EAAE5E;UAAkB;YAAAuE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC/B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEP,CAAC,eAENrF,OAAA;QAAKgF,SAAS,EAAC,kBAAkB;QAAAC,QAAA,eAC7BjF,OAAA;UAAQyD,IAAI,EAAC,QAAQ;UAAC2C,QAAQ,EAAE7D,OAAQ;UAAA0C,QAAA,EACnC1C,OAAO,GAAG,aAAa,GAAG;QAAsB;UAAA2C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC7C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACR,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEd,CAAC;AAAClF,EAAA,CA5UIF,kBAAkB;EAAA,QACHN,WAAW;AAAA;AAAA0G,EAAA,GAD1BpG,kBAAkB;AA8UxB,eAAeA,kBAAkB;AAAC,IAAAoG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}