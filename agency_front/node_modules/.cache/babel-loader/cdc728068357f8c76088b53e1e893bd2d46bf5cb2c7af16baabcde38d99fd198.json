{"ast":null,"code":"var _jsxFileName = \"D:\\\\agency_front\\\\src\\\\components\\\\PropertyCard.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport '../styles/PropertyCard.css';\nimport { Link, useLocation } from 'react-router-dom';\nimport { getPropertyEnums } from \"../api/propertyService\";\nimport { updateStatus } from \"../api/accessProperty\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyCard = ({\n  property\n}) => {\n  _s();\n  var _property$propertyTyp;\n  const location = useLocation();\n  const isOnApplicationPage = location.pathname === '/application';\n  const [statusList, setStatusList] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState('');\n  useEffect(() => {\n    if (isOnApplicationPage) {\n      getPropertyEnums().then(data => {\n        setStatusList(data.statuses || []); // Предполагаем, что приходит объект вида { statuses: ['APPROVED', 'REJECTED', ...] }\n      });\n    }\n  }, [isOnApplicationPage]);\n  const handleUpdateStatus = async () => {\n    try {\n      await updateStatus(property.id, selectedStatus);\n      alert(`Статус обновлён на ${selectedStatus}`);\n    } catch (error) {\n      alert('Ошибка при обновлении статуса');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"property-card\",\n    children: [/*#__PURE__*/_jsxDEV(Link, {\n      to: `/property/${property.id}`,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"property-image\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"image-placeholder\",\n          children: ((_property$propertyTyp = property.propertyType) === null || _property$propertyTyp === void 0 ? void 0 : _property$propertyTyp.charAt(0)) || 'P'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"property-details\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"property-type\",\n          children: property.propertyType || 'Тип не указан'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"property-description\",\n          children: property.description || 'Описание отсутствует'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"property-price\",\n          children: property.price ? `${property.price} ₽` : 'Цена не указана'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this), isOnApplicationPage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-actions\",\n      children: [/*#__PURE__*/_jsxDEV(\"select\", {\n        value: selectedStatus,\n        onChange: e => setSelectedStatus(e.target.value),\n        className: \"status-dropdown\",\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          children: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0438\\u0442\\u0435 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 25\n        }, this), statusList.map(status => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: status,\n          children: status\n        }, status, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"property-action-button\",\n        onClick: handleUpdateStatus,\n        disabled: !selectedStatus,\n        children: \"\\u0418\\u0437\\u043C\\u0435\\u043D\\u0438\\u0442\\u044C \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n};\n_s(PropertyCard, \"1aNiEOFYzpygl2U8oq6oyL7t/VE=\", false, function () {\n  return [useLocation];\n});\n_c = PropertyCard;\nPropertyCard.propTypes = {\n  property: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    price: PropTypes.number,\n    propertyType: PropTypes.string,\n    description: PropTypes.string\n  }).isRequired\n};\nexport default PropertyCard;\nvar _c;\n$RefreshReg$(_c, \"PropertyCard\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","Link","useLocation","getPropertyEnums","updateStatus","jsxDEV","_jsxDEV","PropertyCard","property","_s","_property$propertyTyp","location","isOnApplicationPage","pathname","statusList","setStatusList","selectedStatus","setSelectedStatus","then","data","statuses","handleUpdateStatus","id","alert","error","className","children","to","propertyType","charAt","fileName","_jsxFileName","lineNumber","columnNumber","description","price","value","onChange","e","target","map","status","onClick","disabled","_c","propTypes","shape","number","isRequired","string","$RefreshReg$"],"sources":["D:/agency_front/src/components/PropertyCard.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport '../styles/PropertyCard.css';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport {getPropertyEnums} from \"../api/propertyService\";\r\nimport {updateStatus} from \"../api/accessProperty\";\r\n\r\nconst PropertyCard = ({ property }) => {\r\n    const location = useLocation();\r\n    const isOnApplicationPage = location.pathname === '/application';\r\n\r\n    const [statusList, setStatusList] = useState([]);\r\n    const [selectedStatus, setSelectedStatus] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (isOnApplicationPage) {\r\n            getPropertyEnums().then((data) => {\r\n                setStatusList(data.statuses || []); // Предполагаем, что приходит объект вида { statuses: ['APPROVED', 'REJECTED', ...] }\r\n            });\r\n        }\r\n    }, [isOnApplicationPage]);\r\n\r\n    const handleUpdateStatus = async () => {\r\n        try {\r\n            await updateStatus(property.id, selectedStatus);\r\n            alert(`Статус обновлён на ${selectedStatus}`);\r\n        } catch (error) {\r\n            alert('Ошибка при обновлении статуса');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"property-card\">\r\n            <Link to={`/property/${property.id}`}>\r\n                <div className=\"property-image\">\r\n                    <div className=\"image-placeholder\">\r\n                        {property.propertyType?.charAt(0) || 'P'}\r\n                    </div>\r\n                </div>\r\n                <div className=\"property-details\">\r\n                    <h3 className=\"property-type\">\r\n                        {property.propertyType || 'Тип не указан'}\r\n                    </h3>\r\n                    <p className=\"property-description\">\r\n                        {property.description || 'Описание отсутствует'}\r\n                    </p>\r\n                    <div className=\"property-price\">\r\n                        {property.price ? `${property.price} ₽` : 'Цена не указана'}\r\n                    </div>\r\n                </div>\r\n            </Link>\r\n\r\n            {isOnApplicationPage && (\r\n                <div className=\"property-actions\">\r\n                    <select\r\n                        value={selectedStatus}\r\n                        onChange={(e) => setSelectedStatus(e.target.value)}\r\n                        className=\"status-dropdown\"\r\n                    >\r\n                        <option value=\"\">Выберите статус</option>\r\n                        {statusList.map((status) => (\r\n                            <option key={status} value={status}>\r\n                                {status}\r\n                            </option>\r\n                        ))}\r\n                    </select>\r\n                    <button\r\n                        className=\"property-action-button\"\r\n                        onClick={handleUpdateStatus}\r\n                        disabled={!selectedStatus}\r\n                    >\r\n                        Изменить статус\r\n                    </button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nPropertyCard.propTypes = {\r\n    property: PropTypes.shape({\r\n        id: PropTypes.number.isRequired,\r\n        price: PropTypes.number,\r\n        propertyType: PropTypes.string,\r\n        description: PropTypes.string,\r\n    }).isRequired\r\n};\r\n\r\nexport default PropertyCard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}