{"ast":null,"code":"var _jsxFileName = \"D:\\\\study\\\\Agency\\\\agency_front\\\\src\\\\context\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { createContext, useContext, useState, useEffect } from 'react';\nimport * as authApi from '../api/authApi';\nimport * as userApi from '../api/userApi';\nimport { useNavigate } from 'react-router-dom';\nimport { ROLES, ROLE_REDIRECTS } from '../constants/roles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [user, setUser] = useState(null); // Добавляем состояние для данных пользователя\n  const [loading, setLoading] = useState(true); // Для отслеживания загрузки\n  const navigate = useNavigate();\n  const login = async (email, password) => {\n    try {\n      const {\n        token,\n        refreshToken\n      } = await authApi.login(email, password);\n      localStorage.setItem('token', token);\n      localStorage.setItem('refreshToken', refreshToken);\n      const userData = await userApi.getCurrentUser();\n      setUser(userData);\n      setIsAuthenticated(true);\n\n      // Редирект только здесь\n      const redirectPath = ROLE_REDIRECTS[userData.role] || '/';\n      console.log(`Redirecting ${userData.role} to ${redirectPath}`);\n      navigate(redirectPath, {\n        replace: true\n      });\n      return userData;\n    } catch (error) {\n      console.error('Login error:', error);\n      throw error;\n    }\n  };\n  useEffect(() => {\n    const initAuth = async () => {\n      const token = localStorage.getItem('token');\n      if (token) {\n        try {\n          const userData = await userApi.getCurrentUser();\n          setUser(userData);\n          setIsAuthenticated(true);\n        } catch (error) {\n          console.error('Failed to fetch user data', error);\n          logout();\n        }\n      }\n      setLoading(false);\n    };\n    initAuth();\n  }, []);\n  const logout = () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('refreshToken');\n    setUser(null);\n    setIsAuthenticated(false);\n  };\n  const register = async userData => {\n    await authApi.register(userData);\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      isAuthenticated,\n      user,\n      loading,\n      login,\n      logout,\n      register\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthProvider, \"ngK2eW8VBW2J0nMmhrpI292f8Gk=\", false, function () {\n  return [useNavigate];\n});\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  const context = useContext(AuthContext);\n  if (!context) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n_s2(useAuth, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["createContext","useContext","useState","useEffect","authApi","userApi","useNavigate","ROLES","ROLE_REDIRECTS","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","isAuthenticated","setIsAuthenticated","user","setUser","loading","setLoading","navigate","login","email","password","token","refreshToken","localStorage","setItem","userData","getCurrentUser","redirectPath","role","console","log","replace","error","initAuth","getItem","logout","removeItem","register","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","context","Error","$RefreshReg$"],"sources":["D:/study/Agency/agency_front/src/context/AuthContext.js"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react';\r\nimport * as authApi from '../api/authApi';\r\nimport * as userApi from '../api/userApi';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { ROLES, ROLE_REDIRECTS } from '../constants/roles';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n    const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n    const [user, setUser] = useState(null); // Добавляем состояние для данных пользователя\r\n    const [loading, setLoading] = useState(true); // Для отслеживания загрузки\r\n    const navigate = useNavigate();\r\n\r\n    const login = async (email, password) => {\r\n        try {\r\n            const { token, refreshToken } = await authApi.login(email, password);\r\n            localStorage.setItem('token', token);\r\n            localStorage.setItem('refreshToken', refreshToken);\r\n\r\n            const userData = await userApi.getCurrentUser();\r\n            setUser(userData);\r\n            setIsAuthenticated(true);\r\n\r\n            // Редирект только здесь\r\n            const redirectPath = ROLE_REDIRECTS[userData.role] || '/';\r\n            console.log(`Redirecting ${userData.role} to ${redirectPath}`);\r\n            navigate(redirectPath, { replace: true });\r\n\r\n            return userData;\r\n        } catch (error) {\r\n            console.error('Login error:', error);\r\n            throw error;\r\n        }\r\n    };\r\n\r\n\r\n    useEffect(() => {\r\n        const initAuth = async () => {\r\n            const token = localStorage.getItem('token');\r\n            if (token) {\r\n                try {\r\n                    const userData = await userApi.getCurrentUser();\r\n                    setUser(userData);\r\n                    setIsAuthenticated(true);\r\n                } catch (error) {\r\n                    console.error('Failed to fetch user data', error);\r\n                    logout();\r\n                }\r\n            }\r\n            setLoading(false);\r\n        };\r\n\r\n        initAuth();\r\n    }, []);\r\n\r\n\r\n    const logout = () => {\r\n        localStorage.removeItem('token');\r\n        localStorage.removeItem('refreshToken');\r\n        setUser(null);\r\n        setIsAuthenticated(false);\r\n    };\r\n\r\n    const register = async (userData) => {\r\n        await authApi.register(userData);\r\n    };\r\n\r\n    return (\r\n        <AuthContext.Provider value={{\r\n            isAuthenticated,\r\n            user,\r\n            loading,\r\n            login,\r\n            logout,\r\n            register\r\n        }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useAuth = () => {\r\n    const context = useContext(AuthContext);\r\n    if (!context) {\r\n        throw new Error('useAuth must be used within an AuthProvider');\r\n    }\r\n    return context;\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}